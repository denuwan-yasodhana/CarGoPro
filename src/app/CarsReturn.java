/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package app;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;
import app.MyConnection;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import java.util.concurrent.TimeUnit;

/**
 *
 * @author Denuwan
 */
public class CarsReturn extends javax.swing.JFrame {

    /**
     * Creates new form CarsReturn
     */
    public CarsReturn() {
        initComponents();
        DisplayRents();
        DisplayReturns();
        setLocationRelativeTo(null);
        
        lbl_delay.setVisible(false);
        lbl_delayAmount.setVisible(false);
        
    }
    
    // Make Connection
    
    MyConnection conManager = new MyConnection();
    Connection con = null;
    Statement st = null;
    ResultSet rs = null;

    private void DisplayRents()
    {
        try
	{
                con = conManager.createConnection();            
                String sql = "SELECT * FROM rent";
                PreparedStatement pstmt = con.prepareStatement(sql);
                rs = pstmt.executeQuery();

                table_rent.setModel(DbUtils.resultSetToTableModel(rs));

	}

	catch(SQLException e)
	{
		e.printStackTrace();
	}
    }
    
    private void DisplayReturns()
    {
        try
	{
                con = conManager.createConnection();            
                String sql = "SELECT * FROM returns";
                PreparedStatement pstmt = con.prepareStatement(sql);
                rs = pstmt.executeQuery();

                table_return.setModel(DbUtils.resultSetToTableModel(rs));

	}

	catch(SQLException e)
	{
		e.printStackTrace();
	}
    }
    

    // Update cars and driver details 
    private void UpdateCar_UpdateDriver()
    {
        try
        {
             con = conManager.createConnection();
            
            
            String RentID = txt_rentalID.getText();

            String Status = "Available";
            
            String Query1 = "UPDATE car_rental_system.cars SET Status= '"+ Status +"' WHERE CarID= (SELECT CarID FROM rent WHERE RentID = '"+ RentID +"')";            
            String Query2 = "UPDATE car_rental_system.drivers SET Status= '"+ Status +"' WHERE DriverID= (SELECT DriverID FROM rent WHERE RentID = '"+ RentID +"')";
            
            Statement Add = con.createStatement();
            Add.executeUpdate(Query1);
            Add.executeUpdate(Query2);
            JOptionPane.showMessageDialog(this, "Car and Driver details updated Successfully"); 


            DisplayRents();
            DisplayReturns();
            
        }
        catch(Exception e)
        {
            e.printStackTrace();
        }
    }
    
    
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_returnID = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txt_rentalID = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        date_NreturnDate = new com.toedter.calendar.JDateChooser();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_rent = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        table_return = new javax.swing.JTable();
        btn_return = new javax.swing.JButton();
        btn_calDelayAmount = new javax.swing.JButton();
        lbl_delayAmount = new javax.swing.JLabel();
        btn_edit = new javax.swing.JButton();
        btn_reset = new javax.swing.JButton();
        lbl_delay = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 102, 102));

        jLabel1.setFont(new java.awt.Font("Stencil", 0, 24)); // NOI18N
        jLabel1.setText("Cars Retruns Management");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel2.setText("Returns ID");

        txt_returnID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_returnIDActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel3.setText("Rental ID");

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel7.setText("Accurately Return Date");

        date_NreturnDate.setDateFormatString("dd/MM/yyyy");
        date_NreturnDate.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                date_NreturnDateMouseReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel4.setText("Delay");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        jLabel5.setText("Delay Amount");

        jLabel9.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jLabel9.setText("Cars On Rent");

        table_rent.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "RentID", "CarID", "Customer", "RentDate", "ReturnDate", "Amount", "DriverID"
            }
        ));
        table_rent.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_rentMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_rent);

        jLabel10.setFont(new java.awt.Font("Stencil", 0, 18)); // NOI18N
        jLabel10.setText("Cars On Return");

        table_return.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ReturnID", "RentID", "CarReturnDate", "DelayDates", "DelayAmount"
            }
        ));
        table_return.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_returnMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(table_return);

        btn_return.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_return.setText("Save");
        btn_return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_returnActionPerformed(evt);
            }
        });

        btn_calDelayAmount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_calDelayAmount.setText("Calculate Delay Amount");
        btn_calDelayAmount.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_calDelayAmountActionPerformed(evt);
            }
        });

        lbl_delayAmount.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delayAmount.setText("Display Delay Amount");

        btn_edit.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_edit.setText("Edit");
        btn_edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_editActionPerformed(evt);
            }
        });

        btn_reset.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        btn_reset.setText("Clear");
        btn_reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_resetActionPerformed(evt);
            }
        });

        lbl_delay.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        lbl_delay.setText("Display Delay");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(97, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(431, 431, 431))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(52, 52, 52)
                                            .addComponent(btn_return)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(btn_edit)
                                            .addGap(35, 35, 35)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(btn_calDelayAmount)
                                                .addComponent(btn_reset)))
                                        .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(date_NreturnDate, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 207, Short.MAX_VALUE)
                                            .addComponent(txt_returnID, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_rentalID, javax.swing.GroupLayout.Alignment.LEADING)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel4)
                                            .addComponent(lbl_delay))
                                        .addGap(27, 27, 27)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel5)
                                            .addComponent(lbl_delayAmount))))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(102, 102, 102)
                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 741, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(266, 266, 266)
                                        .addComponent(jLabel10)))))
                        .addGap(109, 109, 109))))
            .addGroup(layout.createSequentialGroup()
                .addGap(408, 408, 408)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addGap(68, 68, 68))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel9)
                .addGap(4, 4, 4)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txt_returnID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(txt_rentalID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18)
                        .addComponent(date_NreturnDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_delay))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lbl_delayAmount)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_calDelayAmount)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btn_return)
                            .addComponent(btn_edit)
                            .addComponent(btn_reset)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                        .addComponent(jLabel10)
                        .addGap(35, 35, 35)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_returnIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_returnIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_returnIDActionPerformed

    private void table_rentMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_rentMouseClicked

        DefaultTableModel model = (DefaultTableModel)table_rent.getModel();
        int MyIndex = table_rent.getSelectedRow();
        txt_rentalID.setText(model.getValueAt(MyIndex, 0).toString());
        
        firstDate = (Date) model.getValueAt(MyIndex, 4);
        
        Delaycost = Integer.valueOf(model.getValueAt(MyIndex, 5).toString());
        
    }//GEN-LAST:event_table_rentMouseClicked

    private void table_returnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_returnMouseClicked
        
        DefaultTableModel model = (DefaultTableModel)table_return.getModel();
        int MyIndex = table_return.getSelectedRow();
        
        txt_returnID.setText(model.getValueAt(MyIndex, 0).toString());
        txt_rentalID.setText(model.getValueAt(MyIndex, 1).toString());
        date_NreturnDate.setDate((Date) model.getValueAt(MyIndex, 2));
        lbl_delay.setText(model.getValueAt(MyIndex, 3).toString());
        lbl_delayAmount.setText(model.getValueAt(MyIndex, 4).toString());
        
        lbl_delay.setVisible(true);
        lbl_delayAmount.setVisible(true);
        
    }//GEN-LAST:event_table_returnMouseClicked

   java.util.Date NReturnDate;
    java.sql.Date MySetReturn;
    
    private void btn_returnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_returnActionPerformed
       
        if(txt_returnID.getText().isEmpty() || txt_rentalID.getText().isEmpty() || lbl_delay.getText().isEmpty() || lbl_delayAmount.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Missing Information");
        }
        else
        {
            try
            {
                // Get and Set rent date                
                NReturnDate = date_NreturnDate.getDate();
		MySetReturn = new java.sql.Date(NReturnDate.getTime());
                
                con = conManager.createConnection();
                PreparedStatement add = con.prepareStatement("INSERT INTO returns VALUES (?, ?, ?, ?, ?)");
                
                add.setString(1, txt_returnID.getText());	
		add.setString(2, txt_rentalID.getText());
		add.setDate(3, MySetReturn);
                add.setInt(4, Integer.valueOf(lbl_delay.getText()));
                add.setInt(5, FullAmount);
                
                lbl_delayAmount.setVisible(true);
                
                int row = add.executeUpdate();
		JOptionPane.showMessageDialog(this, "Return Details added successfully");

                
                UpdateCar_UpdateDriver();
                DisplayReturns();
                Reset();
                
            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }
        
    }//GEN-LAST:event_btn_returnActionPerformed

    int Delaycost = 0;
    int IncPrice, FullAmount = 0;
    Date firstDate, secondDate = null;
    
    private void btn_calDelayAmountActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_calDelayAmountActionPerformed
        
        DefaultTableModel model = (DefaultTableModel)table_return.getModel();
        int MyIndex = table_return.getSelectedRow();
        
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy", Locale.ENGLISH);
        
        secondDate = date_NreturnDate.getDate();
            
        long diffM = Math.abs(secondDate.getTime() - firstDate.getTime());
        long dif = TimeUnit.DAYS.convert(diffM, TimeUnit.MILLISECONDS);
        
        long Fdate = Math.abs(firstDate.getTime());
        long Sdate = Math.abs(secondDate.getTime());
        
        if(Fdate > Sdate)
        {
            dif = 0;
            lbl_delay.setText(String.valueOf(dif));
            FullAmount = 0;
            lbl_delayAmount.setText("Rs " + FullAmount);
        
            lbl_delay.setVisible(true);
            lbl_delayAmount.setVisible(true);
        }
        else
        {
            lbl_delay.setText(String.valueOf(dif));
            
            IncPrice = Delaycost * 10/100;
        
            FullAmount = IncPrice * Integer.valueOf(lbl_delay.getText());
        
            lbl_delayAmount.setText("Rs " + FullAmount);
        
            lbl_delay.setVisible(true);
            lbl_delayAmount.setVisible(true);
        }
        
            
        
    }//GEN-LAST:event_btn_calDelayAmountActionPerformed

    private void btn_editActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_editActionPerformed

        if(txt_returnID.getText().isEmpty() || txt_rentalID.getText().isEmpty() || lbl_delay.getText().isEmpty() || lbl_delayAmount.getText().isEmpty())
        {
            JOptionPane.showMessageDialog(this, "Select the Return details to be Updated");
        }
        else
        {
            try
            {
                NReturnDate = date_NreturnDate.getDate();
		MySetReturn = new java.sql.Date(NReturnDate.getTime());

                 con = conManager.createConnection();
                
                String ReturnID = txt_returnID.getText();
                String Query = "UPDATE car_rental_system.returns SET RentID = '"+ txt_rentalID.getText() +"', CarReturnDate = '"+ MySetReturn +"', DelayDates = '"+ Integer.valueOf(lbl_delay.getText()) +"', DelayAmount = '"+ Integer.valueOf(FullAmount) +"' WHERE ReturnID = '"+ ReturnID +"'";

                Statement Add = con.createStatement();
                Add.executeUpdate(Query);
                JOptionPane.showMessageDialog(this, "Returns details updated Successfully");

                DisplayReturns();
                Reset();

            }
            catch(Exception e)
            {
                e.printStackTrace();
            }
        }

    }//GEN-LAST:event_btn_editActionPerformed

    private void Reset()
    {
        txt_returnID.setText("");
        txt_rentalID.setText("");
        date_NreturnDate.setDate(null);
        lbl_delay.setVisible(false);
        lbl_delayAmount.setVisible(false);
        
    }
    
    private void btn_resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_resetActionPerformed

        Reset();

    }//GEN-LAST:event_btn_resetActionPerformed

    private void date_NreturnDateMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_date_NreturnDateMouseReleased
        
        
    }//GEN-LAST:event_date_NreturnDateMouseReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CarsReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CarsReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CarsReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CarsReturn.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CarsReturn().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_calDelayAmount;
    private javax.swing.JButton btn_edit;
    private javax.swing.JButton btn_reset;
    private javax.swing.JButton btn_return;
    private com.toedter.calendar.JDateChooser date_NreturnDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JLabel lbl_delay;
    private javax.swing.JLabel lbl_delayAmount;
    private javax.swing.JTable table_rent;
    private javax.swing.JTable table_return;
    private javax.swing.JTextField txt_rentalID;
    private javax.swing.JTextField txt_returnID;
    // End of variables declaration//GEN-END:variables
}
